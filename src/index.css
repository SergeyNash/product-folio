@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --pixel-size: 2px;
  --grid-color: rgba(98, 114, 164, 0.1);
  --grid-size: 32px;
}

body {
  font-family: 'Press Start 2P', system-ui;
  background-color: #0f172a;
  color: #e2e8f0;
  image-rendering: pixelated;
}

.pixel-borders {
  border-style: solid;
  border-width: var(--pixel-size);
  border-color: #64748b;
  box-shadow: var(--pixel-size) var(--pixel-size) 0 #1e293b;
}

.retro-grid {
  background-image: 
    linear-gradient(var(--grid-color) 1px, transparent 1px),
    linear-gradient(90deg, var(--grid-color) 1px, transparent 1px);
  background-size: var(--grid-size) var(--grid-size);
}

.retro-grid::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: radial-gradient(
    circle at 50% 50%,
    rgba(34, 197, 94, 0.1) 0%,
    transparent 50%
  );
  pointer-events: none;
}

.map-decoration {
  position: absolute;
  width: 16px;
  height: 16px;
  background-color: rgba(34, 197, 94, 0.2);
  clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
  animation: float 3s ease-in-out infinite;
}

@keyframes float {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-10px); }
}

.location {
  transition: all 0.3s ease;
  cursor: pointer;
  z-index: 2;
}

.location:hover {
  transform: scale(1.05);
  filter: brightness(1.2);
}

.inventory-slot {
  background: #1e293b;
  border: 2px solid #64748b;
  padding: 16px;
  transition: all 0.3s ease;
}

.inventory-slot:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
}

.skill-bar {
  height: 8px;
  background: #475569;
  position: relative;
  overflow: hidden;
}

.skill-bar-fill {
  height: 100%;
  background: #22c55e;
  transition: width 0.5s ease-out;
}

.achievement {
  transition: all 0.3s ease;
  background: #1e293b;
}

.achievement:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
}

.clip-triangle {
  clip-path: polygon(0 50%, 100% 0, 100% 100%);
}